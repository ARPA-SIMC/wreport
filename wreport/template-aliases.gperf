/*
 * wreport/template-aliases - Aliases for weather bulletin template codes
 *
 * Copyright (C) 2008--2010  ARPA-SIM <urpsim@smr.arpa.emr.it>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
 *
 * Author: Enrico Zini <enrico@enricozini.com>
 */

%define slot-name name
%define class-name TemplateAliases
%define lookup-function-name find
%struct-type
%language=C++
%global-table
%ignore-case
/* Using %switch may be faster (remember to check when doing optimizations) */

%{
#include "error.h"
#include <stdio.h>
#include <string.h>

namespace wreport {
%}

struct aliasdef { const char* name; int cat; int subcat; int lcat; };
%%
generic,  255, 255,   0
synop,      0, 255,   1
buoy,       1, 255,  21
pilot,      2, 255,  91
temp,       2, 255, 101
tempship,   2, 255, 102
airep,      4, 255, 142
amdar,      4, 255, 144
acars,      4, 255, 145
metar,      0, 255, 140
%%

void parse_template(const char* str, int* cat, int* subcat, int* localsubcat)
{
	struct aliasdef* res = TemplateAliases::find(str, strlen(str));
	if (res == NULL)
	{
		if (sscanf(str, "%d.%d.%d", cat, subcat, localsubcat) != 3)
			error_consistency::throwf("template '%s' must be either as an alias or 'type.subtype.localsubtype'", str);
	} else {
		*cat = res->cat;
		*subcat = res->subcat;
		*localsubcat = res->lcat;
	}
}

}

/* vim:set ts=4 sw=4: */
